#所有类型和API的名字应该尽可能短，但不要出现缩写，除非该缩写被广泛接受（例如MD5）

#凡是功能相似的API，名字也应该相似

#在可以使用多个词汇命名的情况下，优先使用大家习惯的词汇，举例说明：Convert和Transformation都带有转换的意思，但是大家习惯使用前者，因此应该尽量使用前者命名

#如果某一派生类只有实现基类（或接口）一个功能，那么命名应该以基类名称作为前缀，举例说明，IExcelBook是所有Excel工作簿的基接口，那么在底层使用微软COM组件实现的Excel工作簿应该叫ExcelBookMicrosoft

#命名空间的名称应该以System开头，如果该命名空间的作用和BCL的原生命名空间相同，则应该使用原生命名空间的名称，举例说明：
假设有一个有关反射的类型，那么就算这个类型是自己写的，也应该放在System.Reflection命名空间中
这样做的目的不是冒充BCL命名空间中的类型，而是合并原生和自定义命名空间的引用，举例说明，在上一个例子中，假设调用者需要这个类型，同时又需要使用原生类型System.Reflection.MethodInfo，那么它不需要引用两个命名空间

#如果某一自定义命名空间的功能和原生命名空间比较相似，但是该命名空间中的类型独立存在，不依赖于原生命名空间类型，那么应该对上一条原则加以变动，命名原则为在原生命名空间后面加上后缀Francis，以示区别，举例说明，System.IO是BCL有关IO操作的命名空间，那么自定义命名空间应该叫System.IOFrancis

#方法的参数和局部变量应该采用驼峰命名法，其他情况下应该采用帕斯卡命名法