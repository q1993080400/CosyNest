
/*超大屏PC平台*/
@media all and (min-width : 2448px)
{
    /*全局样式*/
    :root
    {
        /*长度基准，它用来自适应不同平台的长度*/
        --lengthReference: 2.25;
        /*最顶层组件的左边和右边大小*/
        --topLayoutPaddingHorizontal: calc(var(--topLayoutPaddingVertical) * 2.5);
        /*更宽的弹窗宽度*/
        --popUpWidthWide: 60vw;
        /*更窄的弹窗宽度*/
        --popUpWidthNarrow: min(var(--popUpWidthWide),50ic);
    }
}

/*超大容器，一般出现在超大屏PC平台*/
@container (min-width : 1836px)
{
    .arrange
    {
        /*列表容器的较少数量*/
        --arrangeParticleMinority: 4;
        /*列表容器的中等数量*/
        --arrangeParticleMedium: 5;
        /*列表容器的较多数量*/
        --arrangeParticleMost: 6;
        /*列表容器的特别多数量*/
        --arrangeParticleEspeciallyMany: 9;
        /*列表容器元素的建议高度*/
        --arrangeElementSuggestedHeight: 14ic;
    }
}

/*普通屏PC平台*/
@media all and (min-width : 1224px) and (max-width : 2448px)
{
    /*全局样式*/
    :root
    {
        /*长度基准，它用来自适应不同平台的长度*/
        --lengthReference: 1.75;
        /*最顶层组件的左边和右边大小*/
        --topLayoutPaddingHorizontal: calc(var(--topLayoutPaddingVertical) * 2);
        /*更宽的弹窗宽度*/
        --popUpWidthWide: 70vw;
        /*更窄的弹窗宽度*/
        --popUpWidthNarrow: min(var(--popUpWidthWide),40ic);
    }
}

/*大容器，一般出现在普通屏PC平台*/
@container (min-width : 1224px) and (max-width : 1836px)
{
    .arrange
    {
        /*列表容器的较少数量*/
        --arrangeParticleMinority: 3;
        /*列表容器的中等数量*/
        --arrangeParticleMedium: 3;
        /*列表容器的较多数量*/
        --arrangeParticleMost: 4;
        /*列表容器的特别多数量*/
        --arrangeParticleEspeciallyMany: 6;
        /*列表容器元素的建议高度*/
        --arrangeElementSuggestedHeight: 12ic;
    }
}

/*平板平台*/
@media all and (min-width : 667px) and (max-width : 1224px)
{
    /*全局样式*/
    :root
    {
        /*长度基准，它用来自适应不同平台的长度*/
        --lengthReference: 1.25;
        /*最顶层组件的左边和右边大小*/
        --topLayoutPaddingHorizontal: calc(var(--topLayoutPaddingVertical) * 1.5);
        /*更宽的弹窗宽度*/
        --popUpWidthWide: 80vw;
        /*更窄的弹窗宽度*/
        --popUpWidthNarrow: min(var(--popUpWidthWide),30ic);
    }
}

/*中容器，一般出现在平板平台*/
@container (min-width : 667px) and (max-width : 1224px)
{
    .arrange
    {
        /*列表容器的较少数量*/
        --arrangeParticleMinority: 2;
        /*列表容器的中等数量*/
        --arrangeParticleMedium: 2;
        /*列表容器的较多数量*/
        --arrangeParticleMost: 3;
        /*列表容器的特别多数量*/
        --arrangeParticleEspeciallyMany: 4;
        /*列表容器元素的建议高度*/
        --arrangeElementSuggestedHeight: 10ic;
    }
}

/*手机平台*/
@media all and (max-width : 667px)
{
    /*全局样式*/
    :root
    {
        /*长度基准，它用来自适应不同平台的长度*/
        --lengthReference: 1;
        /*最顶层组件的左边和右边大小*/
        --topLayoutPaddingHorizontal: var(--topLayoutPaddingVertical);
        /*更宽的弹窗宽度*/
        --popUpWidthWide: 90vw;
        /*更窄的弹窗宽度*/
        --popUpWidthNarrow: var(--popUpWidthWide);
    }
}

/*小容器，一般出现在手机平台*/
@container (max-width : 667px)
{
    .arrange
    {
        /*列表容器的较少数量*/
        --arrangeParticleMinority: 1;
        /*列表容器的中等数量*/
        --arrangeParticleMedium: 1;
        /*列表容器的较多数量*/
        --arrangeParticleMost: 2;
        /*列表容器的特别多数量*/
        --arrangeParticleEspeciallyMany: 2;
        /*列表容器元素的建议高度*/
        --arrangeElementSuggestedHeight: 8ic;
    }
}

/*横向屏幕，即宽大于高，一般用于电脑*/
@media (orientation: landscape)
{
    /*占满屏幕，并且在横屏时自动旋转*/
    .horizontalScreen
    {
        min-width: 100dvw;
        min-height: 100dvh;
    }
}

/*竖向屏幕，即高大于宽，一般用于手机*/
@media (orientation: portrait)
{
    /*占满屏幕，并且在横屏时自动旋转*/
    .horizontalScreen
    {
        min-width: 100dvh;
        min-height: 100dvw;
        transform-origin: left top;
        transform: translateX(100dvw) rotate(90deg);
    }
}

/*打印时的样式*/
@media print
{
    /*打印时隐藏的样式*/
    .hideDuringPrint
    {
        display: none !important;
    }
}

/*全局样式*/
:root
{
    /*全局中等gap属性*/
    --gapMedium: calc(1ch * var(--lengthReference));
    /*全局极端紧凑gap属性*/
    --gapExtremeSmall: calc(var(--gapMedium) * 0.25);
    /*全局紧凑gap属性*/
    --gapSmall: calc(var(--gapMedium) * 0.5);
    /*全局宽松gap属性*/
    --gapBig: calc(var(--gapMedium) * 2);
    /*全局中等padding属性*/
    --paddingMedium: calc(1ch * var(--lengthReference));
    /*全局极端紧凑padding属性*/
    --paddingExtremeSmall: calc(var(--paddingMedium) * 0.25);
    /*全局紧凑padding属性*/
    --paddingSmall: calc(var(--paddingMedium) * 0.5);
    /*全局宽松padding属性*/
    --paddingBig: calc(var(--paddingMedium) * 2);
    /*中等圆角样式*/
    --radiusMedium: 20px;
    /*紧凑圆角样式*/
    --radiusSmall: calc(var(--radiusMedium) * 0.5);
    /*极端圆角样式*/
    --radiusExtremeSmall: calc(var(--radiusMedium) * 0.25);
    /*最顶层组件的上边和下边大小*/
    --topLayoutPaddingVertical: 5dvmin;
    /*屏蔽深色模式，因为作者认为这个需要由开发者自己适配，否则会产生很多意想不到的结果*/
    color-scheme: only light;
}

/*主体样式*/
body
{
    margin: 0;
}

/*pre元素样式*/
pre
{
    max-width: 100%;
    word-break: break-all;
    white-space: normal;
}

/*模态对话框样式*/
dialog
{
    background: unset;
    border: unset;
    padding: unset;
}

/*文件上传器样式*/
input[type=file]
{
    display: none;
}

/*完美容器样式，它的子元素依次排列，允许换行*/
.perfectContainer
{
    display: flex;
    flex-wrap: wrap;
    gap: var(--gapMedium);
}

/*占满屏幕，并且在横屏时自动旋转*/
.horizontalScreen
{
    position: absolute;
    left: 0;
    top: 0;
    box-sizing: border-box;
}

/*平分容器样式，它的子元素平分空间*/
.bisectContainers
{
    display: flex;
}

    /*平分容器直接子元素样式*/
    .bisectContainers > *
    {
        flex-grow: 1;
    }

/*不平分样式，它可以避免平分容器的子元素大小改变*/
.notBsect
{
    flex-grow: 0;
}

/*普通容器样式*/
.commonContainers
{
    display: flex;
    flex-direction: column;
    gap: var(--gapMedium);
}

/*占满屏幕布局*/
.occupyScre
{
    position: absolute;
    left: 0;
    top: 0;
    min-width: 100dvw;
    min-height: 100dvh;
    box-sizing: border-box;
}

/*最顶层组件的布局样式*/
.topLayout
{
    padding: var(--topLayoutPaddingVertical) var(--topLayoutPaddingHorizontal);
}

/*粘性定位样式*/
.sticky
{
    position: sticky;
    z-index: 1;
}

/*粘性定位父容器样式*/
:has(> .sticky)
{
    isolation: isolate;
}

    /*粘性定位父容器的每一个子元素样式，它保证粘性定位不会被遮盖*/
    :has(> .sticky) > *
    {
        isolation: isolate;
    }

/*粘在顶部的粘性定位样式*/
.stickyTop
{
    top: 0px;
}

/*粘在底部的粘性定位样式*/
.stickyBottom
{
    bottom: 0px;
}

/*豆腐块组件容器的CSS样式*/
.tofuCubesContainer
{
    display: flex;
    flex-direction: column;
    row-gap: var(--paddingSmall);
}

/*豆腐块组件图标的CSS样式*/
.tofuCubesIcon
{
}

/*豆腐块组件文本的CSS样式*/
.tofuCubesText
{
    text-align: center;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

/*表示一个换行样式*/
.wrap
{
    white-space: pre-wrap;
}

/*相对于父元素的中部居中布局，水平垂直方向皆居中，它还会填满父元素*/
.centerMiddRelativelyFill
{
    left: 0;
    top: 0;
    min-width: 100%;
    min-height: 100%;
    box-sizing: border-box;
    display: flex;
    place-content: center;
    align-items: center;
}

/*相对于父元素的中部居中布局，水平垂直方向皆居中*/
.centerMiddRelatively
{
    left: 0;
    top: 0;
    box-sizing: border-box;
    display: flex;
    place-content: center;
    align-items: center;
}

/*相对于屏幕的中部居中布局，水平垂直方向皆居中*/
.centerMiddAbsolute
{
    position: absolute;
    left: 0;
    top: 0;
    min-width: 100dvw;
    min-height: 100dvh;
    box-sizing: border-box;
    display: flex;
    place-content: center;
    align-items: center;
}

/*表示一个紧凑居中布局，它一般用来排列按钮*/
.compactCentered
{
    display: flex;
    place-content: center;
    gap: var(--gapBig);
}

/*全屏蒙版容器样式*/
.maskingContainerFullScreen
{
    position: fixed;
    z-index: -9999;
}

/*亚克力容器样式*/
.acrylicContainer
{
    background-position: center;
    background-size: cover;
    width: 100%;
    height: 100%
}

/*亚克力蒙版样式*/
.acrylicMask
{
    background: rgba(251, 251, 253, 0.4);
    backdrop-filter: saturate(1.8) blur(15px);
    width: 100%;
    height: 100%
}

/*IOS蒙版容器样式*/
.iosContainer
{
    background-position: center;
    background-size: cover;
    background-color: transparent;
    width: 100%;
    height: 100%;
}

/*IOS蒙版浅色样式*/
.iosContainerUndertint
{
    background-color: rgba(250, 250, 252, 0.8);
    backdrop-filter: saturate(1.8) blur(20px);
}

/*IOS蒙版深色样式*/
.iosContainerDarkness
{
    background: rgba(4, 4, 2, 0.8);
    backdrop-filter: saturate(1.8) blur(20px);
}

/*被选中的元素的样式*/
.selectElement
{
    background-color: gray;
    color: white;
}

/*被选择的元素的文本样式*/
.selectElementText
{
    width: max-content;
}

/*禁止鼠标点击样式*/
.prohibitClicking
{
    pointer-events: none;
}


/*依次排列元素样式*/
.arrange
{
    display: grid;
    gap: var(--gapMedium);
}

/*依次排列元素的父容器样式*/
:has(> .arrange)
{
    container-type: inline-size;
}

/*依次排列元素，且元素数量较少时的样式*/
.arrangeMinority
{
    grid-template-columns: repeat(var(--arrangeParticleMinority),1fr)
}

/*依次排列元素，且元素数量中等时的样式*/
.arrangeMedium
{
    grid-template-columns: repeat(var(--arrangeParticleMedium),1fr)
}

/*依次排列元素，且元素数量较多时的样式*/
.arrangeMost
{
    grid-template-columns: repeat(var(--arrangeParticleMost),1fr)
}

/*依次排列元素，且元素数量特别多时的样式*/
.arrangeEspeciallyMany
{
    grid-template-columns: repeat(var(--arrangeParticleEspeciallyMany),1fr)
}

/*弹窗宽度样式*/
.popUpWidth
{
    max-width: var(--popUpWidthWide);
}
