@namespace BootstrapBlazor.Components
@using Microsoft.AspNetCore;
@inherits ComponentBase

<MediaViewer MediaSource="MediaSource">
    <RenderComponent>
        <div class="mediaViewerContainer">
            @foreach (var item in context.RenderElement)
            {
                @item
            }
        </div>
        @{
            var isOpen = context.PreviewMediaIndex >= 0;
        }
        <Modal @ref="Modal" hidden="@(!isOpen)">
            <BootstrapBlazor.Components.ModalDialog IsCentered=true Size="Size.Medium" ShowCloseButton=false ShowHeader=false>
                <BodyTemplate>
                    @if (isOpen)
                    {
                        <Carousel ShowIndicators=false>
                            @foreach (var item in Medias(context))
                            {
                                <CarouselItem Interval="int.MaxValue">
                                    <NineGrids>
                                        @if (item.IsImage)
                                        {
                                            <img src="@item.MediaUri" style="object-fit:contain;object-position:center" />
                                        }
                                        else
                                        {
                                            <Media CloseMemoryProgress=true Context="info">
                                                <video id="@info.ID" width="350"
                                                       ontimeupdate="@info.AppendScript(info.OnTimeUpDateScript,OnTimeUpDate)"
                                                       onloadedmetadata="@info.AppendScript(info.OnLoadedMetaDataScript,OnLoadedMetaData)"
                                                       onended="@info.OnEndedScript"
                                                       onvolumechange="@info.OnVolumeChangeScript"
                                                       src="@item.MediaUri" muted controls autoplay loop />
                                            </Media>
                                        }
                                    </NineGrids>
                                </CarouselItem>
                            }
                        </Carousel>
                    }
                </BodyTemplate>
                <FooterTemplate>
                    @if (isOpen)
                    {
                        <CompactCentered>
                            <Button OnClickWithoutRender="()=>context.QuitPreview.InvokeAsync()">关闭</Button>
                        </CompactCentered>
                    }
                </FooterTemplate>
            </BootstrapBlazor.Components.ModalDialog>
        </Modal>
        @if (Modal is { })
        {
            if (isOpen)
                Modal.Show();
            else
                Modal.Close();
        }
    </RenderComponent>
    <RenderCover>
        @{
            var media = context.MediaSource;
        }
        <div style="display:grid;grid-template:1fr auto 1fr/1fr auto 1fr" @onclick=@context.PreviewEvent>
            <img src="@media.CoverUri" class="cover coverShare" />
            @if (!media.IsImage)
            {
                <img src="_content/ToolBootstrapBlazor/icon/playButton.svg" class="playButton playButtonShare" />
            }
        </div>
    </RenderCover>
</MediaViewer>